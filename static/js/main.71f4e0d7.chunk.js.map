{"version":3,"sources":["route/home.jsx","App.js","serviceWorker.js","index.js","css/home.module.css"],"names":["Home","className","style","header","title","description","role","aria-label","to","nav_bt","Error","fontSize","App","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"wPAwCeA,MApCf,WACC,OACC,oCACC,yBAAKC,UAAWC,IAAMC,QACrB,0BAAMF,UAAWC,IAAME,OAAQ,cAC/B,6BACA,0BAAMH,UAAWC,IAAMG,aAAvB,wBACuB,IACtB,0BAAMC,KAAK,MAAMC,aAAW,wBAA5B,8BAID,6BACA,kBAAC,IAAD,CAAMC,GAAG,QAAQP,UAAWC,IAAMO,QAAlC,OAEC,0BAAMH,KAAK,MAAMC,aAAW,UAA5B,iBAID,kBAAC,IAAD,CAAMC,GAAG,SAASP,UAAWC,IAAMO,QAAnC,aAEC,0BAAMH,KAAK,MAAMC,aAAW,iBAA5B,WAID,kBAAC,IAAD,CAAMC,GAAG,WAAWP,UAAWC,IAAMO,QAArC,UAEC,0BAAMH,KAAK,MAAMC,aAAW,WAA5B,oBCFL,SAASG,IACR,OACC,gCACC,0BAAMR,MAAO,CAAES,SAAU,SACxB,0BACCL,KAAK,MACLC,aAAW,cACXL,MAAO,CAAES,SAAU,UAHpB,gBAOA,6BARD,8BAQkC,kBAAC,IAAD,CAAMH,GAAG,KAAT,aAMtBI,MAnCf,WACC,OACC,yBAAKX,UAAU,OACd,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,KACjB,kBAAC,EAAD,OAED,kBAAC,IAAD,CAAOA,KAAK,UACX,kBAACJ,EAAD,OAED,kBAAC,IAAD,CAAUF,GAAG,e,QCVZO,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MC1FjEC,iBACC,kBAAC,IAAMC,WAAP,KACC,kBAAC,EAAD,OAEDC,SAASC,eAAe,SDYlB,SAAkBrB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIqB,IAAIC,WAAwB7B,OAAOC,SAAS6B,MACpDC,SAAW/B,OAAOC,SAAS8B,OAIvC,OAGF/B,OAAOgC,iBAAiB,QAAQ,WAC9B,IAAM3B,EAAK,UAAMwB,WAAN,sBAEP/B,IAgEV,SAAiCO,EAAOC,GAEtC2B,MAAM5B,EAAO,CACX6B,QAAS,CAAE,iBAAkB,YAE5BxB,MAAK,SAAAyB,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5ChC,UAAUC,cAAcgC,MAAM9B,MAAK,SAAAC,GACjCA,EAAa8B,aAAa/B,MAAK,WAC7BV,OAAOC,SAASyC,eAKpBtC,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IACN,oEAvFAwB,CAAwBtC,EAAOC,GAI/BC,UAAUC,cAAcgC,MAAM9B,MAAK,WACjCQ,QAAQC,IACN,iHAMJf,EAAgBC,EAAOC,OClC/BE,I,kBCfAoC,EAAOC,QAAU,CAAC,YAAc,0BAA0B,OAAS,qBAAqB,UAAU,sBAAsB,MAAQ,oBAAoB,YAAc,0BAA0B,OAAS,wB","file":"static/js/main.71f4e0d7.chunk.js","sourcesContent":["import style from \"../css/home.module.css\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Home() {\n\treturn (\n\t\t<>\n\t\t\t<div className={style.header}>\n\t\t\t\t<span className={style.title}>{\"GitGud DEV\"}</span>\n\t\t\t\t<br />\n\t\t\t\t<span className={style.description}>\n\t\t\t\t\tLearn to be developer{\" \"}\n\t\t\t\t\t<span role=\"img\" aria-label=\"Laptop and nerd face\">\n\t\t\t\t\t\tüíª üòé\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<br />\n\t\t\t\t<Link to=\"/blog\" className={style.nav_bt}>\n\t\t\t\t\tBlog\n\t\t\t\t\t<span role=\"img\" aria-label=\"Pencil\">\n\t\t\t\t\t\t‚úèÔ∏è\n\t\t\t\t\t</span>\n\t\t\t\t</Link>\n\t\t\t\t<Link to=\"/about\" className={style.nav_bt}>\n\t\t\t\t\tWho Are We\n\t\t\t\t\t<span role=\"img\" aria-label=\"Question Mark\">\n\t\t\t\t\t\t‚ùì\n\t\t\t\t\t</span>\n\t\t\t\t</Link>\n\t\t\t\t<Link to=\"/contact\" className={style.nav_bt}>\n\t\t\t\t\tContact\n\t\t\t\t\t<span role=\"img\" aria-label=\"Mailbox\">\n\t\t\t\t\t\tüì´\n\t\t\t\t\t</span>\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"./App.css\";\nimport {\n\tHashRouter as Router,\n\tSwitch,\n\tRoute,\n\tLink,\n\tRedirect\n} from \"react-router-dom\";\nimport Home from \"./route/home.jsx\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Router>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t<Home />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/error\">\n\t\t\t\t\t\t<Error />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Redirect to=\"/error\" />\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</div>\n\t);\n}\n\nfunction Error() {\n\treturn (\n\t\t<center>\n\t\t\t<span style={{ fontSize: \"25px\" }}>\n\t\t\t\t<span\n\t\t\t\t\trole=\"img\"\n\t\t\t\t\taria-label=\"Robot emoji\"\n\t\t\t\t\tstyle={{ fontSize: \"100px\" }}\n\t\t\t\t>\n\t\t\t\t\tü§ñ\n\t\t\t\t</span>\n\t\t\t\t<br /> Page could not be found ! <Link to=\"/\">Go Home</Link>\n\t\t\t</span>\n\t\t</center>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { render } from \"react-snapshot\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nrender(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerVideo\":\"home_headerVideo__4v4E_\",\"header\":\"home_header__3FDEe\",\"fade-in\":\"home_fade-in__2K17N\",\"title\":\"home_title__3SdOf\",\"description\":\"home_description__2vR7W\",\"nav_bt\":\"home_nav_bt__38MtC\"};"],"sourceRoot":""}